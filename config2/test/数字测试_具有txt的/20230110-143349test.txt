2023-01-10 14:33:50,202 - __main__ - 识别的图片路径:Z:/txj/data/十分区数据/val2
2023-01-10 14:34:03,130 - __main__ - 总数:875
2023-01-10 14:34:03,130 - __main__ - 正确数量:738
2023-01-10 14:34:03,130 - __main__ - 准确率:0.8434285714285714
2023-01-10 14:34:03,130 - __main__ - 错误数量:137
2023-01-10 14:34:03,130 - __main__ - 错误率:0.15657142857142858
2023-01-10 14:34:03,130 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\20230110-142430_混淆矩阵.png 实际预测:胃角
2023-01-10 14:34:03,130 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\20230110-142617_混淆矩阵.png 实际预测:胃角
2023-01-10 14:34:03,130 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\20230110-143134_混淆矩阵.png 实际预测:胃体小弯
2023-01-10 14:34:03,130 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\20230110-143249_混淆矩阵.png 实际预测:胃角
2023-01-10 14:34:03,130 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\10.胃底-底体交界\2019-07-31_09-08-38-159#pic000850_2019-07-31_09-08-37.jpg 实际预测:胃体大弯
2023-01-10 14:34:03,130 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\10.胃底-底体交界\2019-08-13_08-59-40-692#pic000556_2019-08-13_08-59-40.jpg 实际预测:胃窦
2023-01-10 14:34:03,131 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\10.胃底-底体交界\2019-08-13_10-02-01-532#pic000987_2019-08-13_10-02-00.jpg 实际预测:胃体大弯
2023-01-10 14:34:03,131 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\10.胃底-底体交界\2019-08-13_10-02-18-975#pic001022_2019-08-13_10-02-18.jpg 实际预测:胃体大弯
2023-01-10 14:34:03,131 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\10.胃底-底体交界\2019-08-14_11-05-02-000#pic000594_2019-08-14_11-05-01.jpg 实际预测:贲门
2023-01-10 14:34:03,131 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\10.胃底-底体交界\2019-08-14_11-06-24-780#pic000760_2019-08-14_11-06-24.jpg 实际预测:胃体小弯
2023-01-10 14:34:03,131 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\10.胃底-底体交界\2019-08-14_11-06-25-744#pic000762_2019-08-14_11-06-25.jpg 实际预测:胃体小弯
2023-01-10 14:34:03,131 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\10.胃底-底体交界\2019-08-14_11-06-56-109#pic000823_2019-08-14_11-06-55.jpg 实际预测:胃体大弯
2023-01-10 14:34:03,131 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\10.胃底-底体交界\2019-09-04_08-37-15-896#pic000418_2019-09-04_08-37-14.jpg 实际预测:胃角
2023-01-10 14:34:03,131 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\10.胃底-底体交界\2019-09-05_10-56-30-859#pic000523_2019-09-05_10-56-29.jpg 实际预测:胃角
2023-01-10 14:34:03,131 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\11.胃底-干扰\2019-07-29_09-14-43-702#pic000134_2019-07-29_09-14-43.jpg 实际预测:胃窦
2023-01-10 14:34:03,131 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\11.胃底-干扰\2019-07-29_09-14-44-689#pic000136_2019-07-29_09-14-44.jpg 实际预测:胃体小弯
2023-01-10 14:34:03,131 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\11.胃底-干扰\2019-07-29_09-15-03-200#pic000173_2019-07-29_09-15-02.jpg 实际预测:胃体小弯
2023-01-10 14:34:03,131 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\11.胃底-干扰\2019-07-29_09-15-16-677#pic000200_2019-07-29_09-15-16.jpg 实际预测:胃体大弯
2023-01-10 14:34:03,131 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\11.胃底-干扰\2019-07-29_09-15-28-580#pic000224_2019-07-29_09-15-27.jpg 实际预测:胃体大弯
2023-01-10 14:34:03,131 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\11.胃底-干扰\2019-07-29_09-15-44-622#pic000256_2019-07-29_09-15-43.jpg 实际预测:胃窦
2023-01-10 14:34:03,131 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\11.胃底-干扰\2019-07-29_09-15-46-080#pic000259_2019-07-29_09-15-45.jpg 实际预测:胃窦
2023-01-10 14:34:03,131 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\11.胃底-干扰\2019-07-29_09-18-33-168#pic000594_2019-07-29_09-18-32.jpg 实际预测:贲门
2023-01-10 14:34:03,131 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\11.胃底-干扰\2019-08-13_09-00-28-100#pic000651_2019-08-13_09-00-27.jpg 实际预测:胃窦
2023-01-10 14:34:03,131 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\11.胃底-干扰\2019-08-13_09-58-09-963#pic000522_2019-08-13_09-58-09.jpg 实际预测:胃体大弯
2023-01-10 14:34:03,131 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\11.胃底-干扰\2019-08-13_09-58-18-364#pic000539_2019-08-13_09-58-17.jpg 实际预测:胃体小弯
2023-01-10 14:34:03,131 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\11.胃底-干扰\2019-08-13_09-58-39-811#pic000582_2019-08-13_09-58-38.jpg 实际预测:胃体大弯
2023-01-10 14:34:03,131 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\11.胃底-干扰\2019-08-13_09-58-42-762#pic000588_2019-08-13_09-58-41.jpg 实际预测:胃体大弯
2023-01-10 14:34:03,131 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\11.胃底-干扰\2019-08-13_09-58-46-749#pic000596_2019-08-13_09-58-45.jpg 实际预测:胃体大弯
2023-01-10 14:34:03,131 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\11.胃底-干扰\2019-08-13_10-02-39-460#pic001063_2019-08-13_10-02-38.jpg 实际预测:胃体大弯
2023-01-10 14:34:03,131 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\11.胃底-干扰\2019-08-13_10-02-39-948#pic001064_2019-08-13_10-02-39.jpg 实际预测:胃体大弯
2023-01-10 14:34:03,131 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\11.胃底-干扰\2019-08-13_10-06-13-265#pic001492_2019-08-13_10-06-12.jpg 实际预测:胃体大弯
2023-01-10 14:34:03,135 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\11.胃底-干扰\2019-08-13_10-06-13-696#pic001493_2019-08-13_10-06-12.jpg 实际预测:胃体大弯
2023-01-10 14:34:03,135 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\11.胃底-干扰\2019-08-13_10-06-14-214#pic001494_2019-08-13_10-06-13.jpg 实际预测:胃体大弯
2023-01-10 14:34:03,135 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\11.胃底-干扰\2019-08-13_10-06-27-227#pic001520_2019-08-13_10-06-26.jpg 实际预测:胃体小弯
2023-01-10 14:34:03,135 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\11.胃底-干扰\2019-08-13_10-06-27-724#pic001521_2019-08-13_10-06-26.jpg 实际预测:胃体小弯
2023-01-10 14:34:03,135 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\11.胃底-干扰\2019-08-14_11-02-03-932#pic000256_2019-08-14_11-02-03.jpg 实际预测:胃窦
2023-01-10 14:34:03,135 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\11.胃底-干扰\2019-08-14_11-07-18-563#pic000868_2019-08-14_11-07-18.jpg 实际预测:胃体大弯
2023-01-10 14:34:03,135 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\11.胃底-干扰\2019-08-14_11-09-02-053#pic001074_2019-08-14_11-09-01.jpg 实际预测:胃体大弯
2023-01-10 14:34:03,135 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\11.胃底-干扰\2019-08-30_08-37-33-089#pic000544_2019-08-30_08-37-32.jpg 实际预测:胃体大弯
2023-01-10 14:34:03,135 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\12.体上-折角\2019-09-05_10-57-15-850#pic000613_2019-09-05_10-57-14.jpg 实际预测:体下
2023-01-10 14:34:03,135 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\12.体上-折角\2019-09-05_10-57-17-846#pic000617_2019-09-05_10-57-16.jpg 实际预测:体下
2023-01-10 14:34:03,135 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\12.体上-折角\2019-09-05_10-57-20-830#pic000623_2019-09-05_10-57-19.jpg 实际预测:体下
2023-01-10 14:34:03,135 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\12.体上-折角\2019-09-05_10-57-21-331#pic000624_2019-09-05_10-57-20.jpg 实际预测:体下
2023-01-10 14:34:03,135 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\12.体上-折角\2019-09-05_10-57-27-308#pic000636_2019-09-05_10-57-26.jpg 实际预测:胃底
2023-01-10 14:34:03,135 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\12.体上-折角\2019-09-05_10-57-29-291#pic000640_2019-09-05_10-57-28.jpg 实际预测:胃底
2023-01-10 14:34:03,135 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\12.体上-折角\2019-09-05_10-57-29-798#pic000641_2019-09-05_10-57-28.jpg 实际预测:胃底
2023-01-10 14:34:03,135 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\14.体上-干扰\2019-07-30_10-23-36-813#pic000494_2019-07-30_10-23-35.jpg 实际预测:胃底
2023-01-10 14:34:03,135 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\14.体上-干扰\2019-07-30_10-24-42-632#pic000626_2019-07-30_10-24-41.jpg 实际预测:体下
2023-01-10 14:34:03,135 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\14.体上-干扰\2019-07-30_10-24-43-132#pic000627_2019-07-30_10-24-42.jpg 实际预测:体下
2023-01-10 14:34:03,135 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\14.体上-干扰\2019-07-31_09-04-30-522#pic000353_2019-07-31_09-04-30.jpg 实际预测:贲门
2023-01-10 14:34:03,135 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\14.体上-干扰\2019-07-31_09-04-31-018#pic000354_2019-07-31_09-04-30.jpg 实际预测:贲门
2023-01-10 14:34:03,135 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\14.体上-干扰\2019-07-31_09-04-57-884#pic000408_2019-07-31_09-04-57.jpg 实际预测:胃体大弯
2023-01-10 14:34:03,135 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\14.体上-干扰\2019-08-13_10-01-58-576#pic000981_2019-08-13_10-01-57.jpg 实际预测:胃体大弯
2023-01-10 14:34:03,135 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\15.体下-桶状、折角\2019-07-31_09-13-14-517#pic001401_2019-07-31_09-13-14.jpg 实际预测:胃体大弯
2023-01-10 14:34:03,135 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\15.体下-桶状、折角\2019-08-14_11-12-29-353#pic001490_2019-08-14_11-12-29.jpg 实际预测:胃体小弯
2023-01-10 14:34:03,135 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\15.体下-桶状、折角\2019-08-14_11-12-31-843#pic001495_2019-08-14_11-12-31.jpg 实际预测:胃窦
2023-01-10 14:34:03,135 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\15.体下-桶状、折角\2019-08-14_11-12-35-873#pic001503_2019-08-14_11-12-35.jpg 实际预测:胃窦
2023-01-10 14:34:03,135 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\16.体下-窦体交界\2019-07-31_09-12-40-181#pic001336_2019-07-31_09-12-39.jpg 实际预测:胃体大弯
2023-01-10 14:34:03,135 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\16.体下-窦体交界\2019-07-31_09-12-40-677#pic001337_2019-07-31_09-12-40.jpg 实际预测:胃体大弯
2023-01-10 14:34:03,135 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\17.体下-干扰\2019-07-29_09-19-04-596#pic000657_2019-07-29_09-19-03.jpg 实际预测:胃体大弯
2023-01-10 14:34:03,135 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\17.体下-干扰\2019-07-29_09-19-05-092#pic000658_2019-07-29_09-19-04.jpg 实际预测:胃体大弯
2023-01-10 14:34:03,135 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\17.体下-干扰\2019-07-29_09-19-11-004#pic000670_2019-07-29_09-19-10.jpg 实际预测:胃体大弯
2023-01-10 14:34:03,135 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\17.体下-干扰\2019-07-29_09-20-11-357#pic000791_2019-07-29_09-20-10.jpg 实际预测:胃体大弯
2023-01-10 14:34:03,135 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\17.体下-干扰\2019-07-29_09-20-11-836#pic000792_2019-07-29_09-20-11.jpg 实际预测:胃体大弯
2023-01-10 14:34:03,135 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\17.体下-干扰\2019-07-29_09-20-12-355#pic000793_2019-07-29_09-20-11.jpg 实际预测:胃体大弯
2023-01-10 14:34:03,135 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\17.体下-干扰\2019-07-29_09-21-18-742#pic000926_2019-07-29_09-21-18.jpg 实际预测:胃角
2023-01-10 14:34:03,135 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\17.体下-干扰\2019-07-29_09-21-54-119#pic000997_2019-07-29_09-21-53.jpg 实际预测:胃体大弯
2023-01-10 14:34:03,135 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\17.体下-干扰\2019-07-31_09-07-57-800#pic000769_2019-07-31_09-07-57.jpg 实际预测:胃体大弯
2023-01-10 14:34:03,135 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\17.体下-干扰\2019-08-14_11-12-17-945#pic001467_2019-08-14_11-12-17.jpg 实际预测:胃体大弯
2023-01-10 14:34:03,137 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\17.体下-干扰\2019-08-14_11-12-34-864#pic001501_2019-08-14_11-12-34.jpg 实际预测:食管
2023-01-10 14:34:03,137 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\17.体下-干扰\2019-08-14_11-12-35-364#pic001502_2019-08-14_11-12-35.jpg 实际预测:食管
2023-01-10 14:34:03,137 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\17.体下-干扰\2019-08-14_11-13-01-785#pic001555_2019-08-14_11-13-01.jpg 实际预测:胃体小弯
2023-01-10 14:34:03,137 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\17.体下-干扰\2019-08-14_11-13-09-292#pic001570_2019-08-14_11-13-08.jpg 实际预测:胃体小弯
2023-01-10 14:34:03,137 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\17.体下-干扰\2019-08-14_11-13-09-793#pic001571_2019-08-14_11-13-09.jpg 实际预测:胃体小弯
2023-01-10 14:34:03,137 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\17.体下-干扰\2019-08-14_11-13-10-810#pic001573_2019-08-14_11-13-10.jpg 实际预测:胃体小弯
2023-01-10 14:34:03,137 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\17.体下-干扰\2019-08-14_11-13-31-668#pic001615_2019-08-14_11-13-31.jpg 实际预测:胃窦
2023-01-10 14:34:03,137 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\17.体下-干扰\2019-08-14_11-13-33-151#pic001618_2019-08-14_11-13-32.jpg 实际预测:胃窦
2023-01-10 14:34:03,137 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\17.体下-干扰\2019-08-14_11-15-45-762#pic001884_2019-08-14_11-15-45.jpg 实际预测:胃窦
2023-01-10 14:34:03,137 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\17.体下-干扰\2019-09-02_11-12-29-558#pic000739_2019-09-02_11-12-29.jpg 实际预测:胃角
2023-01-10 14:34:03,137 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\17.体下-干扰\2019-09-02_11-14-02-224#pic000925_2019-09-02_11-14-01.jpg 实际预测:胃体小弯
2023-01-10 14:34:03,137 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\17.体下-干扰\2019-09-04_08-36-19-115#pic000304_2019-09-04_08-36-18.jpg 实际预测:胃体大弯
2023-01-10 14:34:03,137 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\17.体下-干扰\2019-09-04_08-44-48-818#pic001327_2019-09-04_08-44-47.jpg 实际预测:胃体小弯
2023-01-10 14:34:03,137 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\17.体下-干扰\2019-09-04_08-44-52-807#pic001335_2019-09-04_08-44-51.jpg 实际预测:胃体小弯
2023-01-10 14:34:03,137 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\18.胃体大弯-皱襞\2019-07-31_09-02-53-263#pic000158_2019-07-31_09-02-52.jpg 实际预测:十二指肠
2023-01-10 14:34:03,137 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\18.胃体大弯-皱襞\2019-07-31_09-02-53-758#pic000159_2019-07-31_09-02-53.jpg 实际预测:胃角
2023-01-10 14:34:03,137 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\18.胃体大弯-皱襞\2019-07-31_09-05-20-263#pic000453_2019-07-31_09-05-19.jpg 实际预测:胃底
2023-01-10 14:34:03,137 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\18.胃体大弯-皱襞\2019-07-31_09-05-33-819#pic000480_2019-07-31_09-05-33.jpg 实际预测:胃底
2023-01-10 14:34:03,137 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\18.胃体大弯-皱襞\2019-07-31_09-05-35-789#pic000484_2019-07-31_09-05-35.jpg 实际预测:胃底
2023-01-10 14:34:03,137 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\18.胃体大弯-皱襞\2019-07-31_09-07-42-779#pic000739_2019-07-31_09-07-42.jpg 实际预测:胃底
2023-01-10 14:34:03,137 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\18.胃体大弯-皱襞\2019-07-31_09-07-43-265#pic000740_2019-07-31_09-07-42.jpg 实际预测:胃底
2023-01-10 14:34:03,137 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\18.胃体大弯-皱襞\2019-08-14_11-11-09-626#pic001330_2019-08-14_11-11-09.jpg 实际预测:胃底
2023-01-10 14:34:03,137 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\18.胃体大弯-皱襞\2019-08-14_11-11-10-605#pic001332_2019-08-14_11-11-10.jpg 实际预测:胃底
2023-01-10 14:34:03,137 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\19.胃体大弯-干扰\2019-07-29_09-18-02-192#pic000532_2019-07-29_09-18-01.jpg 实际预测:胃体小弯
2023-01-10 14:34:03,137 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\19.胃体大弯-干扰\2019-08-14_11-03-39-190#pic000428_2019-08-14_11-03-38.jpg 实际预测:胃角
2023-01-10 14:34:03,137 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\20.胃体小弯-2折角\2019-07-30_10-26-42-643#pic000867_2019-07-30_10-26-41.jpg 实际预测:胃底
2023-01-10 14:34:03,137 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\20.胃体小弯-2折角\2019-07-31_09-09-34-944#pic000964_2019-07-31_09-09-34.jpg 实际预测:胃体大弯
2023-01-10 14:34:03,137 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\20.胃体小弯-2折角\2019-07-31_09-09-41-917#pic000978_2019-07-31_09-09-41.jpg 实际预测:胃底
2023-01-10 14:34:03,137 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\21.胃体小弯-1折角\2019-08-13_09-05-08-980#pic001214_2019-08-13_09-05-08.jpg 实际预测:胃底
2023-01-10 14:34:03,137 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\22.胃体小弯-干扰\2019-07-30_10-26-28-270#pic000838_2019-07-30_10-26-27.jpg 实际预测:胃底
2023-01-10 14:34:03,137 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\22.胃体小弯-干扰\2019-09-04_08-43-33-580#pic001176_2019-09-04_08-43-32.jpg 实际预测:胃角
2023-01-10 14:34:03,137 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\24.胃角-角前后壁\2019-07-31_09-11-41-345#pic001218_2019-07-31_09-11-41.jpg 实际预测:十二指肠
2023-01-10 14:34:03,137 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\25.胃角-干扰\2019-07-30_10-29-15-882#pic001175_2019-07-30_10-29-15.jpg 实际预测:胃体小弯
2023-01-10 14:34:03,137 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\26.胃窦-幽门窦\2019-08-13_10-09-16-041#pic001859_2019-08-13_10-09-15.jpg 实际预测:食管
2023-01-10 14:34:03,137 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\26.胃窦-幽门窦\2019-08-30_08-43-23-800#pic001248_2019-08-30_08-43-23.jpg 实际预测:胃体小弯
2023-01-10 14:34:03,137 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\28.胃窦-中间沟\2019-08-13_10-11-10-621#pic002089_2019-08-13_10-11-09.jpg 实际预测:胃体小弯
2023-01-10 14:34:03,139 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\28.胃窦-中间沟\2019-08-13_10-11-11-126#pic002090_2019-08-13_10-11-10.jpg 实际预测:胃体小弯
2023-01-10 14:34:03,139 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\28.胃窦-中间沟\2019-08-14_11-17-17-003#pic002061_2019-08-14_11-17-16.jpg 实际预测:胃角
2023-01-10 14:34:03,139 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\28.胃窦-中间沟\2019-08-14_11-17-18-017#pic002062_2019-08-14_11-17-17.jpg 实际预测:胃角
2023-01-10 14:34:03,139 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\28.胃窦-中间沟\2019-08-30_08-44-31-517#pic001384_2019-08-30_08-44-30.jpg 实际预测:胃角
2023-01-10 14:34:03,139 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\28.胃窦-中间沟\2019-09-02_11-15-44-344#pic001130_2019-09-02_11-15-44.jpg 实际预测:胃角
2023-01-10 14:34:03,139 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\29.胃窦-干扰\2019-08-13_10-07-41-854#pic001670_2019-08-13_10-07-40.jpg 实际预测:十二指肠
2023-01-10 14:34:03,139 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\29.胃窦-干扰\2019-08-30_08-43-21-817#pic001244_2019-08-30_08-43-21.jpg 实际预测:胃体小弯
2023-01-10 14:34:03,139 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\29.胃窦-干扰\2019-08-30_08-43-22-306#pic001245_2019-08-30_08-43-21.jpg 实际预测:胃体小弯
2023-01-10 14:34:03,139 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\29.胃窦-干扰\2019-09-04_08-43-25-110#pic001159_2019-09-04_08-43-23.jpg 实际预测:体下
2023-01-10 14:34:03,139 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\29.胃窦-干扰\2019-09-04_08-43-25-608#pic001160_2019-09-04_08-43-24.jpg 实际预测:体下
2023-01-10 14:34:03,139 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\29.胃窦-干扰\2019-09-05_11-00-33-107#pic001009_2019-09-05_11-00-32.jpg 实际预测:胃体小弯
2023-01-10 14:34:03,139 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\8.胃底-皱襞静脉\2019-07-30_10-21-07-364#pic000194_2019-07-30_10-21-06.jpg 实际预测:胃体小弯
2023-01-10 14:34:03,139 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\8.胃底-皱襞静脉\2019-07-31_09-04-11-512#pic000315_2019-07-31_09-04-11.jpg 实际预测:胃窦
2023-01-10 14:34:03,139 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\8.胃底-皱襞静脉\2019-07-31_09-04-11-997#pic000316_2019-07-31_09-04-11.jpg 实际预测:胃窦
2023-01-10 14:34:03,139 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\8.胃底-皱襞静脉\2019-07-31_09-05-58-249#pic000529_2019-07-31_09-05-57.jpg 实际预测:贲门
2023-01-10 14:34:03,139 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\8.胃底-皱襞静脉\2019-07-31_09-05-58-725#pic000530_2019-07-31_09-05-58.jpg 实际预测:胃体大弯
2023-01-10 14:34:03,139 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\8.胃底-皱襞静脉\2019-07-31_09-06-03-628#pic000540_2019-07-31_09-06-03.jpg 实际预测:胃体大弯
2023-01-10 14:34:03,139 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\8.胃底-皱襞静脉\2019-07-31_09-06-06-097#pic000545_2019-07-31_09-06-05.jpg 实际预测:胃体大弯
2023-01-10 14:34:03,139 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\8.胃底-皱襞静脉\2019-07-31_09-06-13-666#pic000560_2019-07-31_09-06-13.jpg 实际预测:贲门
2023-01-10 14:34:03,139 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\8.胃底-皱襞静脉\2019-07-31_09-06-30-020#pic000593_2019-07-31_09-06-29.jpg 实际预测:胃体大弯
2023-01-10 14:34:03,139 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\8.胃底-皱襞静脉\2019-07-31_09-06-34-007#pic000601_2019-07-31_09-06-33.jpg 实际预测:胃体大弯
2023-01-10 14:34:03,139 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\8.胃底-皱襞静脉\2019-07-31_09-07-11-885#pic000677_2019-07-31_09-07-11.jpg 实际预测:贲门
2023-01-10 14:34:03,139 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\8.胃底-皱襞静脉\2019-07-31_09-07-14-395#pic000682_2019-07-31_09-07-14.jpg 实际预测:胃体大弯
2023-01-10 14:34:03,139 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\8.胃底-皱襞静脉\2019-08-14_11-07-06-707#pic000844_2019-08-14_11-07-06.jpg 实际预测:胃体小弯
2023-01-10 14:34:03,139 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\8.胃底-皱襞静脉\2019-08-14_11-07-08-107#pic000847_2019-08-14_11-07-07.jpg 实际预测:胃体小弯
2023-01-10 14:34:03,139 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\8.胃底-皱襞静脉\2019-08-14_11-07-08-614#pic000848_2019-08-14_11-07-08.jpg 实际预测:胃体小弯
2023-01-10 14:34:03,139 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\8.胃底-皱襞静脉\2019-08-14_11-07-13-058#pic000857_2019-08-14_11-07-12.jpg 实际预测:胃体大弯
2023-01-10 14:34:03,139 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\8.胃底-皱襞静脉\2019-08-14_11-09-47-859#pic001166_2019-08-14_11-09-47.jpg 实际预测:胃体大弯
2023-01-10 14:34:03,139 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\8.胃底-皱襞静脉\2019-08-14_11-09-48-356#pic001167_2019-08-14_11-09-48.jpg 实际预测:胃体大弯
2023-01-10 14:34:03,139 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\8.胃底-皱襞静脉\2019-09-02_11-09-29-224#pic000377_2019-09-02_11-09-28.jpg 实际预测:贲门
2023-01-10 14:34:03,139 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\8.胃底-皱襞静脉\2019-09-04_08-38-28-175#pic000563_2019-09-04_08-38-27.jpg 实际预测:胃窦
2023-01-10 14:34:03,139 - __main__ - 错误的识别名称:Z:/txj/data/十分区数据/val2\8.胃底-皱襞静脉\2019-09-05_10-55-45-044#pic000431_2019-09-05_10-55-44.jpg 实际预测:胃角
2023-01-10 14:34:03,151 - matplotlib.colorbar - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x0000017363BA2EE0>
2023-01-10 14:34:03,152 - matplotlib.colorbar - Using auto colorbar locator on colorbar
2023-01-10 14:34:03,152 - matplotlib.colorbar - locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x0000017363BA2EE0>
2023-01-10 14:34:03,152 - matplotlib.colorbar - Setting pcolormesh
2023-01-10 14:34:03,178 - matplotlib.font_manager - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=8.0.
2023-01-10 14:34:03,178 - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2023-01-10 14:34:03,178 - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,178 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,178 - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,178 - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,178 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,178 - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,178 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-10 14:34:03,178 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,178 - matplotlib.font_manager - findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,178 - matplotlib.font_manager - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,178 - matplotlib.font_manager - findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,178 - matplotlib.font_manager - findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,178 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-10 14:34:03,178 - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,178 - matplotlib.font_manager - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,178 - matplotlib.font_manager - findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,178 - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,178 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,178 - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2023-01-10 14:34:03,178 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,178 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-10 14:34:03,178 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,178 - matplotlib.font_manager - findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,179 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,179 - matplotlib.font_manager - findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,179 - matplotlib.font_manager - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2023-01-10 14:34:03,179 - matplotlib.font_manager - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2023-01-10 14:34:03,179 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-10 14:34:03,179 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,179 - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,179 - matplotlib.font_manager - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,179 - matplotlib.font_manager - findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,179 - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2023-01-10 14:34:03,179 - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2023-01-10 14:34:03,179 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,179 - matplotlib.font_manager - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2023-01-10 14:34:03,179 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,179 - matplotlib.font_manager - findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2023-01-10 14:34:03,179 - matplotlib.font_manager - findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,179 - matplotlib.font_manager - findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,179 - matplotlib.font_manager - findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,179 - matplotlib.font_manager - findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,179 - matplotlib.font_manager - findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,179 - matplotlib.font_manager - findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,179 - matplotlib.font_manager - findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,179 - matplotlib.font_manager - findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2023-01-10 14:34:03,179 - matplotlib.font_manager - findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2023-01-10 14:34:03,179 - matplotlib.font_manager - findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,179 - matplotlib.font_manager - findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,179 - matplotlib.font_manager - findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2023-01-10 14:34:03,179 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2023-01-10 14:34:03,179 - matplotlib.font_manager - findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,179 - matplotlib.font_manager - findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2023-01-10 14:34:03,179 - matplotlib.font_manager - findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,179 - matplotlib.font_manager - findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2023-01-10 14:34:03,179 - matplotlib.font_manager - findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,179 - matplotlib.font_manager - findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,179 - matplotlib.font_manager - findfont: score(<Font 'DengXian' (Dengl.ttf) normal normal light normal>) = 10.24
2023-01-10 14:34:03,179 - matplotlib.font_manager - findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,179 - matplotlib.font_manager - findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,179 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2023-01-10 14:34:03,179 - matplotlib.font_manager - findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2023-01-10 14:34:03,179 - matplotlib.font_manager - findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,179 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2023-01-10 14:34:03,180 - matplotlib.font_manager - findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,180 - matplotlib.font_manager - findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,180 - matplotlib.font_manager - findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,180 - matplotlib.font_manager - findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,180 - matplotlib.font_manager - findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,180 - matplotlib.font_manager - findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,180 - matplotlib.font_manager - findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,180 - matplotlib.font_manager - findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,180 - matplotlib.font_manager - findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,180 - matplotlib.font_manager - findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2023-01-10 14:34:03,180 - matplotlib.font_manager - findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2023-01-10 14:34:03,180 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,180 - matplotlib.font_manager - findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,180 - matplotlib.font_manager - findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,180 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2023-01-10 14:34:03,180 - matplotlib.font_manager - findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,180 - matplotlib.font_manager - findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,180 - matplotlib.font_manager - findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,180 - matplotlib.font_manager - findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,180 - matplotlib.font_manager - findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,180 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,180 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,180 - matplotlib.font_manager - findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,180 - matplotlib.font_manager - findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,180 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2023-01-10 14:34:03,180 - matplotlib.font_manager - findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2023-01-10 14:34:03,180 - matplotlib.font_manager - findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,180 - matplotlib.font_manager - findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,180 - matplotlib.font_manager - findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,180 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,180 - matplotlib.font_manager - findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,180 - matplotlib.font_manager - findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,180 - matplotlib.font_manager - findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2023-01-10 14:34:03,180 - matplotlib.font_manager - findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,180 - matplotlib.font_manager - findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,180 - matplotlib.font_manager - findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,180 - matplotlib.font_manager - findfont: score(<Font 'FangSong' (simfang.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,180 - matplotlib.font_manager - findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,180 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2023-01-10 14:34:03,180 - matplotlib.font_manager - findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,180 - matplotlib.font_manager - findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,180 - matplotlib.font_manager - findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,180 - matplotlib.font_manager - findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,181 - matplotlib.font_manager - findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,181 - matplotlib.font_manager - findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,181 - matplotlib.font_manager - findfont: score(<Font 'KaiTi' (simkai.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,181 - matplotlib.font_manager - findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,181 - matplotlib.font_manager - findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,181 - matplotlib.font_manager - findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2023-01-10 14:34:03,181 - matplotlib.font_manager - findfont: score(<Font 'DengXian' (Deng.ttf) normal normal regular normal>) = 10.05
2023-01-10 14:34:03,181 - matplotlib.font_manager - findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,181 - matplotlib.font_manager - findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2023-01-10 14:34:03,181 - matplotlib.font_manager - findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,181 - matplotlib.font_manager - findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,181 - matplotlib.font_manager - findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,181 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,181 - matplotlib.font_manager - findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,181 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2023-01-10 14:34:03,181 - matplotlib.font_manager - findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,181 - matplotlib.font_manager - findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,181 - matplotlib.font_manager - findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2023-01-10 14:34:03,181 - matplotlib.font_manager - findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,181 - matplotlib.font_manager - findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,181 - matplotlib.font_manager - findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,181 - matplotlib.font_manager - findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,181 - matplotlib.font_manager - findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,181 - matplotlib.font_manager - findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,181 - matplotlib.font_manager - findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,181 - matplotlib.font_manager - findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2023-01-10 14:34:03,181 - matplotlib.font_manager - findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,181 - matplotlib.font_manager - findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,181 - matplotlib.font_manager - findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,181 - matplotlib.font_manager - findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,181 - matplotlib.font_manager - findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,181 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2023-01-10 14:34:03,181 - matplotlib.font_manager - findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,181 - matplotlib.font_manager - findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,181 - matplotlib.font_manager - findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,181 - matplotlib.font_manager - findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,181 - matplotlib.font_manager - findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,181 - matplotlib.font_manager - findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,181 - matplotlib.font_manager - findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,181 - matplotlib.font_manager - findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,181 - matplotlib.font_manager - findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,181 - matplotlib.font_manager - findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,181 - matplotlib.font_manager - findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,182 - matplotlib.font_manager - findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,182 - matplotlib.font_manager - findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,182 - matplotlib.font_manager - findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,182 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,182 - matplotlib.font_manager - findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,182 - matplotlib.font_manager - findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,182 - matplotlib.font_manager - findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,182 - matplotlib.font_manager - findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,182 - matplotlib.font_manager - findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,182 - matplotlib.font_manager - findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,182 - matplotlib.font_manager - findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,182 - matplotlib.font_manager - findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 10.525
2023-01-10 14:34:03,182 - matplotlib.font_manager - findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2023-01-10 14:34:03,182 - matplotlib.font_manager - findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,182 - matplotlib.font_manager - findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,182 - matplotlib.font_manager - findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,182 - matplotlib.font_manager - findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,182 - matplotlib.font_manager - findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,182 - matplotlib.font_manager - findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,182 - matplotlib.font_manager - findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,182 - matplotlib.font_manager - findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,182 - matplotlib.font_manager - findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,182 - matplotlib.font_manager - findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,182 - matplotlib.font_manager - findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,182 - matplotlib.font_manager - findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2023-01-10 14:34:03,182 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,182 - matplotlib.font_manager - findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,182 - matplotlib.font_manager - findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,182 - matplotlib.font_manager - findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,182 - matplotlib.font_manager - findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,182 - matplotlib.font_manager - findfont: score(<Font 'SimHei' (simhei.ttf) normal normal 400 normal>) = 0.05
2023-01-10 14:34:03,182 - matplotlib.font_manager - findfont: score(<Font 'DengXian' (Dengb.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,182 - matplotlib.font_manager - findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2023-01-10 14:34:03,182 - matplotlib.font_manager - findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,182 - matplotlib.font_manager - findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,182 - matplotlib.font_manager - findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,182 - matplotlib.font_manager - findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,182 - matplotlib.font_manager - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=8.0 to SimHei ('C:\\Windows\\Fonts\\simhei.ttf') with score of 0.050000.
2023-01-10 14:34:03,187 - matplotlib.font_manager - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=16.0.
2023-01-10 14:34:03,187 - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2023-01-10 14:34:03,187 - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,187 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,187 - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,187 - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,187 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,187 - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,187 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-10 14:34:03,187 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,187 - matplotlib.font_manager - findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,187 - matplotlib.font_manager - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,187 - matplotlib.font_manager - findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,187 - matplotlib.font_manager - findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,187 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-10 14:34:03,187 - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,187 - matplotlib.font_manager - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,187 - matplotlib.font_manager - findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,188 - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,188 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,188 - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2023-01-10 14:34:03,188 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,188 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-10 14:34:03,188 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,188 - matplotlib.font_manager - findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,188 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,188 - matplotlib.font_manager - findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,188 - matplotlib.font_manager - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2023-01-10 14:34:03,188 - matplotlib.font_manager - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2023-01-10 14:34:03,188 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-10 14:34:03,188 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,188 - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,188 - matplotlib.font_manager - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,188 - matplotlib.font_manager - findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,188 - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2023-01-10 14:34:03,188 - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2023-01-10 14:34:03,188 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,188 - matplotlib.font_manager - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2023-01-10 14:34:03,188 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,188 - matplotlib.font_manager - findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2023-01-10 14:34:03,188 - matplotlib.font_manager - findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,188 - matplotlib.font_manager - findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,188 - matplotlib.font_manager - findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,188 - matplotlib.font_manager - findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,188 - matplotlib.font_manager - findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,188 - matplotlib.font_manager - findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,188 - matplotlib.font_manager - findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,188 - matplotlib.font_manager - findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2023-01-10 14:34:03,188 - matplotlib.font_manager - findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2023-01-10 14:34:03,188 - matplotlib.font_manager - findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,188 - matplotlib.font_manager - findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,188 - matplotlib.font_manager - findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2023-01-10 14:34:03,188 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2023-01-10 14:34:03,188 - matplotlib.font_manager - findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,188 - matplotlib.font_manager - findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2023-01-10 14:34:03,188 - matplotlib.font_manager - findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,188 - matplotlib.font_manager - findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2023-01-10 14:34:03,188 - matplotlib.font_manager - findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,188 - matplotlib.font_manager - findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,188 - matplotlib.font_manager - findfont: score(<Font 'DengXian' (Dengl.ttf) normal normal light normal>) = 10.24
2023-01-10 14:34:03,188 - matplotlib.font_manager - findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,189 - matplotlib.font_manager - findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,189 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2023-01-10 14:34:03,189 - matplotlib.font_manager - findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2023-01-10 14:34:03,189 - matplotlib.font_manager - findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,189 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2023-01-10 14:34:03,189 - matplotlib.font_manager - findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,189 - matplotlib.font_manager - findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,189 - matplotlib.font_manager - findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,189 - matplotlib.font_manager - findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,189 - matplotlib.font_manager - findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,189 - matplotlib.font_manager - findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,189 - matplotlib.font_manager - findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,189 - matplotlib.font_manager - findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,189 - matplotlib.font_manager - findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,189 - matplotlib.font_manager - findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2023-01-10 14:34:03,189 - matplotlib.font_manager - findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2023-01-10 14:34:03,189 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,189 - matplotlib.font_manager - findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,189 - matplotlib.font_manager - findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,189 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2023-01-10 14:34:03,189 - matplotlib.font_manager - findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,189 - matplotlib.font_manager - findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,189 - matplotlib.font_manager - findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,189 - matplotlib.font_manager - findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,189 - matplotlib.font_manager - findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,189 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,189 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,189 - matplotlib.font_manager - findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,189 - matplotlib.font_manager - findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,189 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2023-01-10 14:34:03,189 - matplotlib.font_manager - findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2023-01-10 14:34:03,189 - matplotlib.font_manager - findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,189 - matplotlib.font_manager - findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,189 - matplotlib.font_manager - findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,189 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,189 - matplotlib.font_manager - findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,189 - matplotlib.font_manager - findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,189 - matplotlib.font_manager - findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2023-01-10 14:34:03,189 - matplotlib.font_manager - findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,189 - matplotlib.font_manager - findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,189 - matplotlib.font_manager - findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,189 - matplotlib.font_manager - findfont: score(<Font 'FangSong' (simfang.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,189 - matplotlib.font_manager - findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,189 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2023-01-10 14:34:03,190 - matplotlib.font_manager - findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,190 - matplotlib.font_manager - findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,190 - matplotlib.font_manager - findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,190 - matplotlib.font_manager - findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,190 - matplotlib.font_manager - findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,190 - matplotlib.font_manager - findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,190 - matplotlib.font_manager - findfont: score(<Font 'KaiTi' (simkai.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,190 - matplotlib.font_manager - findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,190 - matplotlib.font_manager - findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,190 - matplotlib.font_manager - findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2023-01-10 14:34:03,190 - matplotlib.font_manager - findfont: score(<Font 'DengXian' (Deng.ttf) normal normal regular normal>) = 10.05
2023-01-10 14:34:03,190 - matplotlib.font_manager - findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,190 - matplotlib.font_manager - findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2023-01-10 14:34:03,190 - matplotlib.font_manager - findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,190 - matplotlib.font_manager - findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,190 - matplotlib.font_manager - findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,190 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,190 - matplotlib.font_manager - findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,190 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2023-01-10 14:34:03,190 - matplotlib.font_manager - findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,190 - matplotlib.font_manager - findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,190 - matplotlib.font_manager - findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2023-01-10 14:34:03,190 - matplotlib.font_manager - findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,190 - matplotlib.font_manager - findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,190 - matplotlib.font_manager - findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,190 - matplotlib.font_manager - findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,190 - matplotlib.font_manager - findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,190 - matplotlib.font_manager - findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,190 - matplotlib.font_manager - findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,190 - matplotlib.font_manager - findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2023-01-10 14:34:03,190 - matplotlib.font_manager - findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,190 - matplotlib.font_manager - findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,190 - matplotlib.font_manager - findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,190 - matplotlib.font_manager - findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,190 - matplotlib.font_manager - findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,190 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2023-01-10 14:34:03,190 - matplotlib.font_manager - findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,190 - matplotlib.font_manager - findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,190 - matplotlib.font_manager - findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,190 - matplotlib.font_manager - findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,190 - matplotlib.font_manager - findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,190 - matplotlib.font_manager - findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,190 - matplotlib.font_manager - findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,191 - matplotlib.font_manager - findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,191 - matplotlib.font_manager - findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,191 - matplotlib.font_manager - findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,191 - matplotlib.font_manager - findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,191 - matplotlib.font_manager - findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,191 - matplotlib.font_manager - findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,191 - matplotlib.font_manager - findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,191 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,191 - matplotlib.font_manager - findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,191 - matplotlib.font_manager - findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,191 - matplotlib.font_manager - findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,191 - matplotlib.font_manager - findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,191 - matplotlib.font_manager - findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,191 - matplotlib.font_manager - findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,191 - matplotlib.font_manager - findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,191 - matplotlib.font_manager - findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 10.525
2023-01-10 14:34:03,191 - matplotlib.font_manager - findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2023-01-10 14:34:03,191 - matplotlib.font_manager - findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,191 - matplotlib.font_manager - findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,191 - matplotlib.font_manager - findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,191 - matplotlib.font_manager - findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,191 - matplotlib.font_manager - findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,191 - matplotlib.font_manager - findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,191 - matplotlib.font_manager - findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,191 - matplotlib.font_manager - findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,191 - matplotlib.font_manager - findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,191 - matplotlib.font_manager - findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,191 - matplotlib.font_manager - findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,191 - matplotlib.font_manager - findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2023-01-10 14:34:03,191 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,191 - matplotlib.font_manager - findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,191 - matplotlib.font_manager - findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,191 - matplotlib.font_manager - findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,191 - matplotlib.font_manager - findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,191 - matplotlib.font_manager - findfont: score(<Font 'SimHei' (simhei.ttf) normal normal 400 normal>) = 0.05
2023-01-10 14:34:03,191 - matplotlib.font_manager - findfont: score(<Font 'DengXian' (Dengb.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,191 - matplotlib.font_manager - findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2023-01-10 14:34:03,191 - matplotlib.font_manager - findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,191 - matplotlib.font_manager - findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,191 - matplotlib.font_manager - findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,191 - matplotlib.font_manager - findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,191 - matplotlib.font_manager - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=16.0 to SimHei ('C:\\Windows\\Fonts\\simhei.ttf') with score of 0.050000.
2023-01-10 14:34:03,195 - matplotlib.font_manager - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2023-01-10 14:34:03,195 - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2023-01-10 14:34:03,195 - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,195 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,195 - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,195 - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,195 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,195 - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,195 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-10 14:34:03,195 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,195 - matplotlib.font_manager - findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,195 - matplotlib.font_manager - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,195 - matplotlib.font_manager - findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,195 - matplotlib.font_manager - findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,195 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-10 14:34:03,195 - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,195 - matplotlib.font_manager - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,195 - matplotlib.font_manager - findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,195 - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,195 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,195 - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2023-01-10 14:34:03,195 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,195 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-10 14:34:03,195 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,195 - matplotlib.font_manager - findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,195 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,196 - matplotlib.font_manager - findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,196 - matplotlib.font_manager - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2023-01-10 14:34:03,196 - matplotlib.font_manager - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2023-01-10 14:34:03,196 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-10 14:34:03,196 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,196 - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,196 - matplotlib.font_manager - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,196 - matplotlib.font_manager - findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,196 - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2023-01-10 14:34:03,196 - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2023-01-10 14:34:03,196 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,196 - matplotlib.font_manager - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2023-01-10 14:34:03,196 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,196 - matplotlib.font_manager - findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2023-01-10 14:34:03,196 - matplotlib.font_manager - findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,196 - matplotlib.font_manager - findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,196 - matplotlib.font_manager - findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,196 - matplotlib.font_manager - findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,196 - matplotlib.font_manager - findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,196 - matplotlib.font_manager - findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,196 - matplotlib.font_manager - findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,196 - matplotlib.font_manager - findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2023-01-10 14:34:03,196 - matplotlib.font_manager - findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2023-01-10 14:34:03,196 - matplotlib.font_manager - findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,196 - matplotlib.font_manager - findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,196 - matplotlib.font_manager - findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2023-01-10 14:34:03,196 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2023-01-10 14:34:03,196 - matplotlib.font_manager - findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,196 - matplotlib.font_manager - findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2023-01-10 14:34:03,196 - matplotlib.font_manager - findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,196 - matplotlib.font_manager - findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2023-01-10 14:34:03,196 - matplotlib.font_manager - findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,196 - matplotlib.font_manager - findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,196 - matplotlib.font_manager - findfont: score(<Font 'DengXian' (Dengl.ttf) normal normal light normal>) = 10.24
2023-01-10 14:34:03,196 - matplotlib.font_manager - findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,196 - matplotlib.font_manager - findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,196 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2023-01-10 14:34:03,196 - matplotlib.font_manager - findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2023-01-10 14:34:03,196 - matplotlib.font_manager - findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,196 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2023-01-10 14:34:03,196 - matplotlib.font_manager - findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,196 - matplotlib.font_manager - findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,196 - matplotlib.font_manager - findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,197 - matplotlib.font_manager - findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,197 - matplotlib.font_manager - findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,197 - matplotlib.font_manager - findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,197 - matplotlib.font_manager - findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,197 - matplotlib.font_manager - findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,197 - matplotlib.font_manager - findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,197 - matplotlib.font_manager - findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2023-01-10 14:34:03,197 - matplotlib.font_manager - findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2023-01-10 14:34:03,197 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,197 - matplotlib.font_manager - findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,197 - matplotlib.font_manager - findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,197 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2023-01-10 14:34:03,197 - matplotlib.font_manager - findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,197 - matplotlib.font_manager - findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,197 - matplotlib.font_manager - findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,197 - matplotlib.font_manager - findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,197 - matplotlib.font_manager - findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,197 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,197 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,197 - matplotlib.font_manager - findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,197 - matplotlib.font_manager - findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,197 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2023-01-10 14:34:03,197 - matplotlib.font_manager - findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2023-01-10 14:34:03,197 - matplotlib.font_manager - findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,197 - matplotlib.font_manager - findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,197 - matplotlib.font_manager - findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,197 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,197 - matplotlib.font_manager - findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,197 - matplotlib.font_manager - findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,197 - matplotlib.font_manager - findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2023-01-10 14:34:03,197 - matplotlib.font_manager - findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,197 - matplotlib.font_manager - findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,197 - matplotlib.font_manager - findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,197 - matplotlib.font_manager - findfont: score(<Font 'FangSong' (simfang.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,197 - matplotlib.font_manager - findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,197 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2023-01-10 14:34:03,197 - matplotlib.font_manager - findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,197 - matplotlib.font_manager - findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,197 - matplotlib.font_manager - findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,197 - matplotlib.font_manager - findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,197 - matplotlib.font_manager - findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,197 - matplotlib.font_manager - findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,197 - matplotlib.font_manager - findfont: score(<Font 'KaiTi' (simkai.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,197 - matplotlib.font_manager - findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,197 - matplotlib.font_manager - findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,198 - matplotlib.font_manager - findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2023-01-10 14:34:03,198 - matplotlib.font_manager - findfont: score(<Font 'DengXian' (Deng.ttf) normal normal regular normal>) = 10.05
2023-01-10 14:34:03,198 - matplotlib.font_manager - findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,198 - matplotlib.font_manager - findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2023-01-10 14:34:03,198 - matplotlib.font_manager - findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,198 - matplotlib.font_manager - findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,198 - matplotlib.font_manager - findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,198 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,198 - matplotlib.font_manager - findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,198 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2023-01-10 14:34:03,198 - matplotlib.font_manager - findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,198 - matplotlib.font_manager - findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,198 - matplotlib.font_manager - findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2023-01-10 14:34:03,198 - matplotlib.font_manager - findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,198 - matplotlib.font_manager - findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,198 - matplotlib.font_manager - findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,198 - matplotlib.font_manager - findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,198 - matplotlib.font_manager - findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,198 - matplotlib.font_manager - findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,198 - matplotlib.font_manager - findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,198 - matplotlib.font_manager - findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2023-01-10 14:34:03,198 - matplotlib.font_manager - findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,198 - matplotlib.font_manager - findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,198 - matplotlib.font_manager - findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,198 - matplotlib.font_manager - findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,198 - matplotlib.font_manager - findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,198 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2023-01-10 14:34:03,198 - matplotlib.font_manager - findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,198 - matplotlib.font_manager - findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,198 - matplotlib.font_manager - findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,198 - matplotlib.font_manager - findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,198 - matplotlib.font_manager - findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,198 - matplotlib.font_manager - findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,198 - matplotlib.font_manager - findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,198 - matplotlib.font_manager - findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,198 - matplotlib.font_manager - findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,198 - matplotlib.font_manager - findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,198 - matplotlib.font_manager - findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,198 - matplotlib.font_manager - findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,198 - matplotlib.font_manager - findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,198 - matplotlib.font_manager - findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,198 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,198 - matplotlib.font_manager - findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,198 - matplotlib.font_manager - findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,198 - matplotlib.font_manager - findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,199 - matplotlib.font_manager - findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,199 - matplotlib.font_manager - findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,199 - matplotlib.font_manager - findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,199 - matplotlib.font_manager - findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,199 - matplotlib.font_manager - findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 10.525
2023-01-10 14:34:03,199 - matplotlib.font_manager - findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2023-01-10 14:34:03,199 - matplotlib.font_manager - findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,199 - matplotlib.font_manager - findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,199 - matplotlib.font_manager - findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,199 - matplotlib.font_manager - findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,199 - matplotlib.font_manager - findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,199 - matplotlib.font_manager - findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,199 - matplotlib.font_manager - findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,199 - matplotlib.font_manager - findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,199 - matplotlib.font_manager - findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,199 - matplotlib.font_manager - findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,199 - matplotlib.font_manager - findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,199 - matplotlib.font_manager - findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2023-01-10 14:34:03,199 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,199 - matplotlib.font_manager - findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,199 - matplotlib.font_manager - findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,199 - matplotlib.font_manager - findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,199 - matplotlib.font_manager - findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,199 - matplotlib.font_manager - findfont: score(<Font 'SimHei' (simhei.ttf) normal normal 400 normal>) = 0.05
2023-01-10 14:34:03,199 - matplotlib.font_manager - findfont: score(<Font 'DengXian' (Dengb.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,199 - matplotlib.font_manager - findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2023-01-10 14:34:03,199 - matplotlib.font_manager - findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,199 - matplotlib.font_manager - findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,199 - matplotlib.font_manager - findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,199 - matplotlib.font_manager - findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,199 - matplotlib.font_manager - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to SimHei ('C:\\Windows\\Fonts\\simhei.ttf') with score of 0.050000.
2023-01-10 14:34:03,199 - matplotlib.font_manager - findfont: Matching sans\-serif:style=normal:variant=normal:weight=5:stretch=normal:size=6.0.
2023-01-10 14:34:03,199 - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.42525
2023-01-10 14:34:03,199 - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.71025
2023-01-10 14:34:03,199 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.42525
2023-01-10 14:34:03,199 - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.71025
2023-01-10 14:34:03,199 - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.71025
2023-01-10 14:34:03,199 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,199 - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.42525
2023-01-10 14:34:03,199 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.42525
2023-01-10 14:34:03,199 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,199 - matplotlib.font_manager - findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,199 - matplotlib.font_manager - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.71025
2023-01-10 14:34:03,199 - matplotlib.font_manager - findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,199 - matplotlib.font_manager - findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,199 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.42525
2023-01-10 14:34:03,199 - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.71025
2023-01-10 14:34:03,199 - matplotlib.font_manager - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.71025
2023-01-10 14:34:03,199 - matplotlib.font_manager - findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,199 - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.42525
2023-01-10 14:34:03,199 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.71025
2023-01-10 14:34:03,200 - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.42525
2023-01-10 14:34:03,200 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.71025
2023-01-10 14:34:03,200 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.71025
2023-01-10 14:34:03,200 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,200 - matplotlib.font_manager - findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,200 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,200 - matplotlib.font_manager - findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,200 - matplotlib.font_manager - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.42525
2023-01-10 14:34:03,200 - matplotlib.font_manager - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.42525
2023-01-10 14:34:03,200 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.71025
2023-01-10 14:34:03,200 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,200 - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.71025
2023-01-10 14:34:03,200 - matplotlib.font_manager - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.71025
2023-01-10 14:34:03,200 - matplotlib.font_manager - findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,200 - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.42525
2023-01-10 14:34:03,200 - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.42525
2023-01-10 14:34:03,200 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.71025
2023-01-10 14:34:03,200 - matplotlib.font_manager - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.42525
2023-01-10 14:34:03,200 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.71025
2023-01-10 14:34:03,200 - matplotlib.font_manager - findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.52025
2023-01-10 14:34:03,200 - matplotlib.font_manager - findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,200 - matplotlib.font_manager - findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,200 - matplotlib.font_manager - findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.71025
2023-01-10 14:34:03,200 - matplotlib.font_manager - findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.42525
2023-01-10 14:34:03,200 - matplotlib.font_manager - findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,200 - matplotlib.font_manager - findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.42525
2023-01-10 14:34:03,200 - matplotlib.font_manager - findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.42525
2023-01-10 14:34:03,200 - matplotlib.font_manager - findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.23525
2023-01-10 14:34:03,200 - matplotlib.font_manager - findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.52025
2023-01-10 14:34:03,200 - matplotlib.font_manager - findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,200 - matplotlib.font_manager - findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,200 - matplotlib.font_manager - findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.42525
2023-01-10 14:34:03,200 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.61525
2023-01-10 14:34:03,200 - matplotlib.font_manager - findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,200 - matplotlib.font_manager - findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.23525
2023-01-10 14:34:03,200 - matplotlib.font_manager - findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 10.71025
2023-01-10 14:34:03,200 - matplotlib.font_manager - findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.23525
2023-01-10 14:34:03,200 - matplotlib.font_manager - findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.71025
2023-01-10 14:34:03,200 - matplotlib.font_manager - findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,200 - matplotlib.font_manager - findfont: score(<Font 'DengXian' (Dengl.ttf) normal normal light normal>) = 10.23525
2023-01-10 14:34:03,200 - matplotlib.font_manager - findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 11.71025
2023-01-10 14:34:03,200 - matplotlib.font_manager - findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.71025
2023-01-10 14:34:03,200 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.23525
2023-01-10 14:34:03,200 - matplotlib.font_manager - findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.23525
2023-01-10 14:34:03,201 - matplotlib.font_manager - findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,201 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.90025
2023-01-10 14:34:03,201 - matplotlib.font_manager - findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,201 - matplotlib.font_manager - findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,201 - matplotlib.font_manager - findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,201 - matplotlib.font_manager - findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,201 - matplotlib.font_manager - findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,201 - matplotlib.font_manager - findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.42525
2023-01-10 14:34:03,201 - matplotlib.font_manager - findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,201 - matplotlib.font_manager - findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,201 - matplotlib.font_manager - findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,201 - matplotlib.font_manager - findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.23525
2023-01-10 14:34:03,201 - matplotlib.font_manager - findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.52025
2023-01-10 14:34:03,201 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,201 - matplotlib.font_manager - findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,201 - matplotlib.font_manager - findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 11.71025
2023-01-10 14:34:03,201 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.61525
2023-01-10 14:34:03,201 - matplotlib.font_manager - findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,201 - matplotlib.font_manager - findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.71025
2023-01-10 14:34:03,201 - matplotlib.font_manager - findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,201 - matplotlib.font_manager - findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.71025
2023-01-10 14:34:03,201 - matplotlib.font_manager - findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 10.71025
2023-01-10 14:34:03,201 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,201 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.71025
2023-01-10 14:34:03,201 - matplotlib.font_manager - findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.71025
2023-01-10 14:34:03,201 - matplotlib.font_manager - findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,201 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.23525
2023-01-10 14:34:03,201 - matplotlib.font_manager - findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.23525
2023-01-10 14:34:03,201 - matplotlib.font_manager - findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,201 - matplotlib.font_manager - findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.42525
2023-01-10 14:34:03,201 - matplotlib.font_manager - findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.71025
2023-01-10 14:34:03,201 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.42525
2023-01-10 14:34:03,201 - matplotlib.font_manager - findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.71025
2023-01-10 14:34:03,201 - matplotlib.font_manager - findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.42525
2023-01-10 14:34:03,201 - matplotlib.font_manager - findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.23525
2023-01-10 14:34:03,201 - matplotlib.font_manager - findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,201 - matplotlib.font_manager - findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,201 - matplotlib.font_manager - findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,201 - matplotlib.font_manager - findfont: score(<Font 'FangSong' (simfang.ttf) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,201 - matplotlib.font_manager - findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.42525
2023-01-10 14:34:03,201 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.23525
2023-01-10 14:34:03,201 - matplotlib.font_manager - findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.71025
2023-01-10 14:34:03,201 - matplotlib.font_manager - findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.42525
2023-01-10 14:34:03,201 - matplotlib.font_manager - findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.71025
2023-01-10 14:34:03,202 - matplotlib.font_manager - findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.71025
2023-01-10 14:34:03,202 - matplotlib.font_manager - findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.71025
2023-01-10 14:34:03,202 - matplotlib.font_manager - findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.71025
2023-01-10 14:34:03,202 - matplotlib.font_manager - findfont: score(<Font 'KaiTi' (simkai.ttf) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,202 - matplotlib.font_manager - findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.71025
2023-01-10 14:34:03,202 - matplotlib.font_manager - findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,202 - matplotlib.font_manager - findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.23525
2023-01-10 14:34:03,202 - matplotlib.font_manager - findfont: score(<Font 'DengXian' (Deng.ttf) normal normal regular normal>) = 10.42525
2023-01-10 14:34:03,202 - matplotlib.font_manager - findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,202 - matplotlib.font_manager - findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.52025
2023-01-10 14:34:03,202 - matplotlib.font_manager - findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,202 - matplotlib.font_manager - findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.71025
2023-01-10 14:34:03,202 - matplotlib.font_manager - findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.71025
2023-01-10 14:34:03,202 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.71025
2023-01-10 14:34:03,202 - matplotlib.font_manager - findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 11.42525
2023-01-10 14:34:03,202 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.23525
2023-01-10 14:34:03,202 - matplotlib.font_manager - findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,202 - matplotlib.font_manager - findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.71025
2023-01-10 14:34:03,202 - matplotlib.font_manager - findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.23525
2023-01-10 14:34:03,202 - matplotlib.font_manager - findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.42525
2023-01-10 14:34:03,202 - matplotlib.font_manager - findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.42525
2023-01-10 14:34:03,202 - matplotlib.font_manager - findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,202 - matplotlib.font_manager - findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.71025
2023-01-10 14:34:03,202 - matplotlib.font_manager - findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.71025
2023-01-10 14:34:03,202 - matplotlib.font_manager - findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,202 - matplotlib.font_manager - findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.71025
2023-01-10 14:34:03,202 - matplotlib.font_manager - findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.23525
2023-01-10 14:34:03,202 - matplotlib.font_manager - findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,202 - matplotlib.font_manager - findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.71025
2023-01-10 14:34:03,202 - matplotlib.font_manager - findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.42525
2023-01-10 14:34:03,202 - matplotlib.font_manager - findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,202 - matplotlib.font_manager - findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,202 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.90025
2023-01-10 14:34:03,202 - matplotlib.font_manager - findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.42525
2023-01-10 14:34:03,202 - matplotlib.font_manager - findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.71025
2023-01-10 14:34:03,202 - matplotlib.font_manager - findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.71025
2023-01-10 14:34:03,202 - matplotlib.font_manager - findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,202 - matplotlib.font_manager - findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.71025
2023-01-10 14:34:03,202 - matplotlib.font_manager - findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,202 - matplotlib.font_manager - findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.71025
2023-01-10 14:34:03,202 - matplotlib.font_manager - findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.71025
2023-01-10 14:34:03,202 - matplotlib.font_manager - findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,202 - matplotlib.font_manager - findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.71025
2023-01-10 14:34:03,202 - matplotlib.font_manager - findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,202 - matplotlib.font_manager - findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,203 - matplotlib.font_manager - findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.71025
2023-01-10 14:34:03,203 - matplotlib.font_manager - findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,203 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,203 - matplotlib.font_manager - findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,203 - matplotlib.font_manager - findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,203 - matplotlib.font_manager - findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,203 - matplotlib.font_manager - findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.71025
2023-01-10 14:34:03,203 - matplotlib.font_manager - findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.71025
2023-01-10 14:34:03,203 - matplotlib.font_manager - findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.42525
2023-01-10 14:34:03,203 - matplotlib.font_manager - findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,203 - matplotlib.font_manager - findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 10.90025
2023-01-10 14:34:03,203 - matplotlib.font_manager - findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.23525
2023-01-10 14:34:03,203 - matplotlib.font_manager - findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,203 - matplotlib.font_manager - findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.71025
2023-01-10 14:34:03,203 - matplotlib.font_manager - findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,203 - matplotlib.font_manager - findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.71025
2023-01-10 14:34:03,203 - matplotlib.font_manager - findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.71025
2023-01-10 14:34:03,203 - matplotlib.font_manager - findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,203 - matplotlib.font_manager - findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.71025
2023-01-10 14:34:03,203 - matplotlib.font_manager - findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,203 - matplotlib.font_manager - findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,203 - matplotlib.font_manager - findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.71025
2023-01-10 14:34:03,203 - matplotlib.font_manager - findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.71025
2023-01-10 14:34:03,203 - matplotlib.font_manager - findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.23525
2023-01-10 14:34:03,203 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,203 - matplotlib.font_manager - findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.71025
2023-01-10 14:34:03,203 - matplotlib.font_manager - findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,203 - matplotlib.font_manager - findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.71025
2023-01-10 14:34:03,203 - matplotlib.font_manager - findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.71025
2023-01-10 14:34:03,203 - matplotlib.font_manager - findfont: score(<Font 'SimHei' (simhei.ttf) normal normal 400 normal>) = 0.42524999999999996
2023-01-10 14:34:03,203 - matplotlib.font_manager - findfont: score(<Font 'DengXian' (Dengb.ttf) normal normal 700 normal>) = 10.71025
2023-01-10 14:34:03,203 - matplotlib.font_manager - findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.52025
2023-01-10 14:34:03,203 - matplotlib.font_manager - findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,203 - matplotlib.font_manager - findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.42525
2023-01-10 14:34:03,203 - matplotlib.font_manager - findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.71025
2023-01-10 14:34:03,203 - matplotlib.font_manager - findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.71025
2023-01-10 14:34:03,203 - matplotlib.font_manager - findfont: Matching sans\-serif:style=normal:variant=normal:weight=5:stretch=normal:size=6.0 to SimHei ('C:\\Windows\\Fonts\\simhei.ttf') with score of 0.425250.
2023-01-10 14:34:03,204 - matplotlib.font_manager - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=6.0.
2023-01-10 14:34:03,204 - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2023-01-10 14:34:03,204 - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,204 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,204 - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,204 - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,204 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,204 - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,204 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-10 14:34:03,204 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,204 - matplotlib.font_manager - findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,204 - matplotlib.font_manager - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,204 - matplotlib.font_manager - findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,204 - matplotlib.font_manager - findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,204 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-10 14:34:03,204 - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,204 - matplotlib.font_manager - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,204 - matplotlib.font_manager - findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,204 - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,204 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,204 - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2023-01-10 14:34:03,204 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,204 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-10 14:34:03,204 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,204 - matplotlib.font_manager - findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,204 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,204 - matplotlib.font_manager - findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,204 - matplotlib.font_manager - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2023-01-10 14:34:03,204 - matplotlib.font_manager - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2023-01-10 14:34:03,204 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-10 14:34:03,204 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,204 - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,205 - matplotlib.font_manager - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,205 - matplotlib.font_manager - findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,205 - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2023-01-10 14:34:03,205 - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2023-01-10 14:34:03,205 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,205 - matplotlib.font_manager - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2023-01-10 14:34:03,205 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,205 - matplotlib.font_manager - findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2023-01-10 14:34:03,205 - matplotlib.font_manager - findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,205 - matplotlib.font_manager - findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,205 - matplotlib.font_manager - findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,205 - matplotlib.font_manager - findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,205 - matplotlib.font_manager - findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,205 - matplotlib.font_manager - findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,205 - matplotlib.font_manager - findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,205 - matplotlib.font_manager - findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2023-01-10 14:34:03,205 - matplotlib.font_manager - findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2023-01-10 14:34:03,205 - matplotlib.font_manager - findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,205 - matplotlib.font_manager - findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,205 - matplotlib.font_manager - findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2023-01-10 14:34:03,205 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2023-01-10 14:34:03,205 - matplotlib.font_manager - findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,205 - matplotlib.font_manager - findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2023-01-10 14:34:03,205 - matplotlib.font_manager - findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,205 - matplotlib.font_manager - findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2023-01-10 14:34:03,205 - matplotlib.font_manager - findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,205 - matplotlib.font_manager - findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,205 - matplotlib.font_manager - findfont: score(<Font 'DengXian' (Dengl.ttf) normal normal light normal>) = 10.24
2023-01-10 14:34:03,205 - matplotlib.font_manager - findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,205 - matplotlib.font_manager - findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,205 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2023-01-10 14:34:03,205 - matplotlib.font_manager - findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2023-01-10 14:34:03,205 - matplotlib.font_manager - findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,205 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2023-01-10 14:34:03,205 - matplotlib.font_manager - findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,205 - matplotlib.font_manager - findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,205 - matplotlib.font_manager - findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,205 - matplotlib.font_manager - findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,205 - matplotlib.font_manager - findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,205 - matplotlib.font_manager - findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,205 - matplotlib.font_manager - findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,205 - matplotlib.font_manager - findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,205 - matplotlib.font_manager - findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,205 - matplotlib.font_manager - findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2023-01-10 14:34:03,206 - matplotlib.font_manager - findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2023-01-10 14:34:03,206 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,206 - matplotlib.font_manager - findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,206 - matplotlib.font_manager - findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,206 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2023-01-10 14:34:03,206 - matplotlib.font_manager - findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,206 - matplotlib.font_manager - findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,206 - matplotlib.font_manager - findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,206 - matplotlib.font_manager - findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,206 - matplotlib.font_manager - findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,206 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,206 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,206 - matplotlib.font_manager - findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,206 - matplotlib.font_manager - findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,206 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2023-01-10 14:34:03,206 - matplotlib.font_manager - findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2023-01-10 14:34:03,206 - matplotlib.font_manager - findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,206 - matplotlib.font_manager - findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,206 - matplotlib.font_manager - findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,206 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,206 - matplotlib.font_manager - findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,206 - matplotlib.font_manager - findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,206 - matplotlib.font_manager - findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2023-01-10 14:34:03,206 - matplotlib.font_manager - findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,206 - matplotlib.font_manager - findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,206 - matplotlib.font_manager - findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,206 - matplotlib.font_manager - findfont: score(<Font 'FangSong' (simfang.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,206 - matplotlib.font_manager - findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,206 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2023-01-10 14:34:03,206 - matplotlib.font_manager - findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,206 - matplotlib.font_manager - findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,206 - matplotlib.font_manager - findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,206 - matplotlib.font_manager - findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,206 - matplotlib.font_manager - findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,206 - matplotlib.font_manager - findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,206 - matplotlib.font_manager - findfont: score(<Font 'KaiTi' (simkai.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,206 - matplotlib.font_manager - findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,206 - matplotlib.font_manager - findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,206 - matplotlib.font_manager - findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2023-01-10 14:34:03,206 - matplotlib.font_manager - findfont: score(<Font 'DengXian' (Deng.ttf) normal normal regular normal>) = 10.05
2023-01-10 14:34:03,206 - matplotlib.font_manager - findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,206 - matplotlib.font_manager - findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2023-01-10 14:34:03,206 - matplotlib.font_manager - findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,206 - matplotlib.font_manager - findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,207 - matplotlib.font_manager - findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,207 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,207 - matplotlib.font_manager - findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,207 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2023-01-10 14:34:03,207 - matplotlib.font_manager - findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,207 - matplotlib.font_manager - findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,207 - matplotlib.font_manager - findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2023-01-10 14:34:03,207 - matplotlib.font_manager - findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,207 - matplotlib.font_manager - findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,207 - matplotlib.font_manager - findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,207 - matplotlib.font_manager - findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,207 - matplotlib.font_manager - findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,207 - matplotlib.font_manager - findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,207 - matplotlib.font_manager - findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,207 - matplotlib.font_manager - findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2023-01-10 14:34:03,207 - matplotlib.font_manager - findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,207 - matplotlib.font_manager - findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,207 - matplotlib.font_manager - findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,207 - matplotlib.font_manager - findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,207 - matplotlib.font_manager - findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,207 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2023-01-10 14:34:03,207 - matplotlib.font_manager - findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,207 - matplotlib.font_manager - findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,207 - matplotlib.font_manager - findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,207 - matplotlib.font_manager - findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,207 - matplotlib.font_manager - findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,207 - matplotlib.font_manager - findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,207 - matplotlib.font_manager - findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,207 - matplotlib.font_manager - findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,207 - matplotlib.font_manager - findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,207 - matplotlib.font_manager - findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,207 - matplotlib.font_manager - findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,207 - matplotlib.font_manager - findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,207 - matplotlib.font_manager - findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,207 - matplotlib.font_manager - findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,207 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,207 - matplotlib.font_manager - findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,207 - matplotlib.font_manager - findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,208 - matplotlib.font_manager - findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,208 - matplotlib.font_manager - findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,208 - matplotlib.font_manager - findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,208 - matplotlib.font_manager - findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,208 - matplotlib.font_manager - findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,208 - matplotlib.font_manager - findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 10.525
2023-01-10 14:34:03,208 - matplotlib.font_manager - findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2023-01-10 14:34:03,208 - matplotlib.font_manager - findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,208 - matplotlib.font_manager - findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,208 - matplotlib.font_manager - findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,208 - matplotlib.font_manager - findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,208 - matplotlib.font_manager - findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,208 - matplotlib.font_manager - findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,208 - matplotlib.font_manager - findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,208 - matplotlib.font_manager - findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,208 - matplotlib.font_manager - findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,208 - matplotlib.font_manager - findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,208 - matplotlib.font_manager - findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,208 - matplotlib.font_manager - findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2023-01-10 14:34:03,208 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,208 - matplotlib.font_manager - findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,208 - matplotlib.font_manager - findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,208 - matplotlib.font_manager - findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,208 - matplotlib.font_manager - findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,208 - matplotlib.font_manager - findfont: score(<Font 'SimHei' (simhei.ttf) normal normal 400 normal>) = 0.05
2023-01-10 14:34:03,208 - matplotlib.font_manager - findfont: score(<Font 'DengXian' (Dengb.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,208 - matplotlib.font_manager - findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2023-01-10 14:34:03,208 - matplotlib.font_manager - findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,208 - matplotlib.font_manager - findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,208 - matplotlib.font_manager - findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,208 - matplotlib.font_manager - findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,208 - matplotlib.font_manager - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=6.0 to SimHei ('C:\\Windows\\Fonts\\simhei.ttf') with score of 0.050000.
2023-01-10 14:34:03,243 - matplotlib.font_manager - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2023-01-10 14:34:03,243 - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2023-01-10 14:34:03,243 - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,243 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,243 - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,243 - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,243 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,243 - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,243 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-10 14:34:03,243 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,243 - matplotlib.font_manager - findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,243 - matplotlib.font_manager - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,243 - matplotlib.font_manager - findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,243 - matplotlib.font_manager - findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,243 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-01-10 14:34:03,243 - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,243 - matplotlib.font_manager - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,243 - matplotlib.font_manager - findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,243 - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,243 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,243 - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2023-01-10 14:34:03,243 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,243 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-10 14:34:03,243 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,243 - matplotlib.font_manager - findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,243 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,243 - matplotlib.font_manager - findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,243 - matplotlib.font_manager - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2023-01-10 14:34:03,243 - matplotlib.font_manager - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2023-01-10 14:34:03,243 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-01-10 14:34:03,243 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,243 - matplotlib.font_manager - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,243 - matplotlib.font_manager - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,243 - matplotlib.font_manager - findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,243 - matplotlib.font_manager - findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2023-01-10 14:34:03,244 - matplotlib.font_manager - findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2023-01-10 14:34:03,244 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,244 - matplotlib.font_manager - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2023-01-10 14:34:03,244 - matplotlib.font_manager - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,244 - matplotlib.font_manager - findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2023-01-10 14:34:03,244 - matplotlib.font_manager - findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,244 - matplotlib.font_manager - findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,244 - matplotlib.font_manager - findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,244 - matplotlib.font_manager - findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,244 - matplotlib.font_manager - findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,244 - matplotlib.font_manager - findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,244 - matplotlib.font_manager - findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,244 - matplotlib.font_manager - findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2023-01-10 14:34:03,244 - matplotlib.font_manager - findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2023-01-10 14:34:03,244 - matplotlib.font_manager - findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,244 - matplotlib.font_manager - findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,244 - matplotlib.font_manager - findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2023-01-10 14:34:03,244 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2023-01-10 14:34:03,244 - matplotlib.font_manager - findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,244 - matplotlib.font_manager - findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2023-01-10 14:34:03,244 - matplotlib.font_manager - findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,244 - matplotlib.font_manager - findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2023-01-10 14:34:03,244 - matplotlib.font_manager - findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,244 - matplotlib.font_manager - findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,244 - matplotlib.font_manager - findfont: score(<Font 'DengXian' (Dengl.ttf) normal normal light normal>) = 10.24
2023-01-10 14:34:03,244 - matplotlib.font_manager - findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,244 - matplotlib.font_manager - findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,244 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2023-01-10 14:34:03,244 - matplotlib.font_manager - findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2023-01-10 14:34:03,244 - matplotlib.font_manager - findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,244 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2023-01-10 14:34:03,244 - matplotlib.font_manager - findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,244 - matplotlib.font_manager - findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,244 - matplotlib.font_manager - findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,244 - matplotlib.font_manager - findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,244 - matplotlib.font_manager - findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,244 - matplotlib.font_manager - findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,244 - matplotlib.font_manager - findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,244 - matplotlib.font_manager - findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,244 - matplotlib.font_manager - findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,244 - matplotlib.font_manager - findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2023-01-10 14:34:03,244 - matplotlib.font_manager - findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2023-01-10 14:34:03,244 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,244 - matplotlib.font_manager - findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,245 - matplotlib.font_manager - findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,245 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2023-01-10 14:34:03,245 - matplotlib.font_manager - findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,245 - matplotlib.font_manager - findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,245 - matplotlib.font_manager - findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,245 - matplotlib.font_manager - findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,245 - matplotlib.font_manager - findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,245 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,245 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,245 - matplotlib.font_manager - findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,245 - matplotlib.font_manager - findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,245 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2023-01-10 14:34:03,245 - matplotlib.font_manager - findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2023-01-10 14:34:03,245 - matplotlib.font_manager - findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,245 - matplotlib.font_manager - findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,245 - matplotlib.font_manager - findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,245 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,245 - matplotlib.font_manager - findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,245 - matplotlib.font_manager - findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,245 - matplotlib.font_manager - findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2023-01-10 14:34:03,245 - matplotlib.font_manager - findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,245 - matplotlib.font_manager - findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,245 - matplotlib.font_manager - findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,245 - matplotlib.font_manager - findfont: score(<Font 'FangSong' (simfang.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,245 - matplotlib.font_manager - findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,245 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2023-01-10 14:34:03,245 - matplotlib.font_manager - findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,245 - matplotlib.font_manager - findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,245 - matplotlib.font_manager - findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,245 - matplotlib.font_manager - findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,245 - matplotlib.font_manager - findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,245 - matplotlib.font_manager - findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,245 - matplotlib.font_manager - findfont: score(<Font 'KaiTi' (simkai.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,245 - matplotlib.font_manager - findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,245 - matplotlib.font_manager - findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,245 - matplotlib.font_manager - findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2023-01-10 14:34:03,246 - matplotlib.font_manager - findfont: score(<Font 'DengXian' (Deng.ttf) normal normal regular normal>) = 10.05
2023-01-10 14:34:03,246 - matplotlib.font_manager - findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,246 - matplotlib.font_manager - findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2023-01-10 14:34:03,246 - matplotlib.font_manager - findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,246 - matplotlib.font_manager - findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,246 - matplotlib.font_manager - findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,246 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,246 - matplotlib.font_manager - findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,246 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2023-01-10 14:34:03,246 - matplotlib.font_manager - findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,246 - matplotlib.font_manager - findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,246 - matplotlib.font_manager - findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2023-01-10 14:34:03,246 - matplotlib.font_manager - findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,246 - matplotlib.font_manager - findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,246 - matplotlib.font_manager - findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,246 - matplotlib.font_manager - findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,246 - matplotlib.font_manager - findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,246 - matplotlib.font_manager - findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,246 - matplotlib.font_manager - findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,246 - matplotlib.font_manager - findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2023-01-10 14:34:03,246 - matplotlib.font_manager - findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,246 - matplotlib.font_manager - findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,246 - matplotlib.font_manager - findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,246 - matplotlib.font_manager - findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,246 - matplotlib.font_manager - findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,246 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2023-01-10 14:34:03,246 - matplotlib.font_manager - findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,246 - matplotlib.font_manager - findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,246 - matplotlib.font_manager - findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,246 - matplotlib.font_manager - findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,246 - matplotlib.font_manager - findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,246 - matplotlib.font_manager - findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,247 - matplotlib.font_manager - findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,247 - matplotlib.font_manager - findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,247 - matplotlib.font_manager - findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,247 - matplotlib.font_manager - findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,247 - matplotlib.font_manager - findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,247 - matplotlib.font_manager - findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,247 - matplotlib.font_manager - findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,247 - matplotlib.font_manager - findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,247 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,247 - matplotlib.font_manager - findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,247 - matplotlib.font_manager - findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,247 - matplotlib.font_manager - findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,247 - matplotlib.font_manager - findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,247 - matplotlib.font_manager - findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,247 - matplotlib.font_manager - findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2023-01-10 14:34:03,247 - matplotlib.font_manager - findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,247 - matplotlib.font_manager - findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 10.525
2023-01-10 14:34:03,247 - matplotlib.font_manager - findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2023-01-10 14:34:03,247 - matplotlib.font_manager - findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,247 - matplotlib.font_manager - findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,247 - matplotlib.font_manager - findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,247 - matplotlib.font_manager - findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,247 - matplotlib.font_manager - findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,247 - matplotlib.font_manager - findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,247 - matplotlib.font_manager - findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,247 - matplotlib.font_manager - findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,247 - matplotlib.font_manager - findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,247 - matplotlib.font_manager - findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,247 - matplotlib.font_manager - findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,247 - matplotlib.font_manager - findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2023-01-10 14:34:03,247 - matplotlib.font_manager - findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,247 - matplotlib.font_manager - findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,247 - matplotlib.font_manager - findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,247 - matplotlib.font_manager - findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,247 - matplotlib.font_manager - findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,247 - matplotlib.font_manager - findfont: score(<Font 'SimHei' (simhei.ttf) normal normal 400 normal>) = 0.05
2023-01-10 14:34:03,247 - matplotlib.font_manager - findfont: score(<Font 'DengXian' (Dengb.ttf) normal normal 700 normal>) = 10.335
2023-01-10 14:34:03,247 - matplotlib.font_manager - findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2023-01-10 14:34:03,247 - matplotlib.font_manager - findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,248 - matplotlib.font_manager - findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2023-01-10 14:34:03,248 - matplotlib.font_manager - findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,248 - matplotlib.font_manager - findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
2023-01-10 14:34:03,248 - matplotlib.font_manager - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to SimHei ('C:\\Windows\\Fonts\\simhei.ttf') with score of 0.050000.
2023-01-10 14:34:03,270 - matplotlib.backends.backend_pdf - Assigning font /b'F1' = 'C:\\Windows\\Fonts\\simhei.ttf'
2023-01-10 14:34:03,328 - matplotlib.backends.backend_pdf - Embedding font C:\Windows\Fonts\simhei.ttf.
2023-01-10 14:34:03,328 - matplotlib.backends.backend_pdf - Writing TrueType font.
2023-01-10 14:34:03,413 - __main__ - 混淆矩阵图保存在:Z:/txj/data/十分区数据/val2/20230110-143349_混淆矩阵.pdf
